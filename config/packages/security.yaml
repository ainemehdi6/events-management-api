security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        api_user: { memory: null }
        front_user_provider:
            entity:
                class: 'App\Entity\User'
                property: 'email'
        all_users:
            chain:
                providers: [ 'front_user_provider', 'api_user' ]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        front_user_area:
            pattern: ^/api/(login-check|token/refresh)
            stateless: true
            provider: front_user_provider
            json_login:
                check_path: /api/login-check
                username_path: email
                success_handler: app.security.handler.post_authentication
                failure_handler: app.security.handler.post_authentication
            refresh_jwt:
                check_path: /api/token/refresh
                success_handler: app.security.handler.post_authentication
                failure_handler: app.security.handler.post_authentication

        api:
            pattern: ^/api
            provider: all_users
            stateless: true
            custom_authenticators:
                - App\Security\ApiAuthenticator
            jwt: ~

    access_control:
        - { path: ^/api, roles: [ ROLE_API, ROLE_USER ] }
        - { path: ^/admin/, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon