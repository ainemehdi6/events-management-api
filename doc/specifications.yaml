openapi: 3.0.0
info:
    title: Event Manager API
    version: 1.0.0
    description: API documentation for the Event Manager application

servers:
    - url: http://localhost:8000/api
      description: Local development server

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

    schemas:
        Error:
            type: object
            properties:
                statusCode:
                    type: integer
                title:
                    type: string
                detail:
                    type: string
                instance:
                    type: string
                invalidParams:
                    type: array
                    items:
                        type: object
                        properties:
                            name:
                                type: string
                            reason:
                                type: string

        Event:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                title:
                    type: string
                description:
                    type: string
                date:
                    type: string
                    format: date-time
                endDate:
                    type: string
                    format: date-time
                location:
                    type: string
                capacity:
                    type: integer
                registeredCount:
                    type: integer
                status:
                    type: string
                    enum: [draft, published, cancelled, completed]
                imageUrl:
                    type: string
                    format: uri
                price:
                    type: number
                    format: float
                features:
                    type: array
                    items:
                        type: string
                category:
                    $ref: '#/components/schemas/Category'
                organizer:
                    $ref: '#/components/schemas/User'

        Category:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                description:
                    type: string
                color:
                    type: string

        User:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                email:
                    type: string
                    format: email
                firstname:
                    type: string
                lastname:
                    type: string
                roles:
                    type: array
                    items:
                        type: string

        EventRegistration:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                event:
                    $ref: '#/components/schemas/Event'
                user:
                    $ref: '#/components/schemas/User'
                status:
                    type: string
                    enum: [pending, confirmed, cancelled]
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

paths:
    /events:
        get:
            summary: Get all events
            tags: [Events]
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: List of events
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Event'
                '401':
                    description: Unauthorized - Invalid or missing authentication token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '403':
                    description: Forbidden - User doesn't have required permissions
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Create a new event
            tags: [Events]
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Event'
            responses:
                '201':
                    description: Event created successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Event'
                '400':
                    description: Bad Request - Invalid input data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '401':
                    description: Unauthorized - Invalid or missing authentication token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '403':
                    description: Forbidden - User doesn't have required permissions
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /events/{id}:
        get:
            summary: Get event by ID
            tags: [Events]
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                '200':
                    description: Event details
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Event'
                '404':
                    description: Event not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '400':
                    description: Bad Request - Invalid UUID format
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /events/{id}/register:
        post:
            summary: Register for an event
            tags: [Events]
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                '201':
                    description: Registration successful
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EventRegistration'
                '400':
                    description: Bad Request - Invalid UUID format or event is full
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '401':
                    description: Unauthorized - Invalid or missing authentication token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: Event not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '409':
                    description: Conflict - User already registered for this event
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            summary: Cancel registration for an event
            tags: [ Events ]
            security:
                - bearerAuth: [ ]
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                '204':
                    description: Registration cancelled successfully
                '401':
                    description: Unauthorized - Invalid or missing authentication token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: Event or registration not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /categories:
        get:
            summary: Get all categories
            tags: [Categories]
            responses:
                '200':
                    description: List of categories
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Category'
                '401':
                    description: Unauthorized - Invalid or missing authentication token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /login-check:
        post:
            summary: Login user
            tags: [Authentication]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                            required:
                                - email
                                - password
            responses:
                '200':
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                    refresh_token:
                                        type: string
                                    token_expiration:
                                        type: integer
                                    user_roles:
                                        type: array
                                        items:
                                            type: string
                '400':
                    description: Bad Request - Invalid input format
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '401':
                    description: Unauthorized - Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /token/refresh:
        post:
            summary: Refresh User Token
            tags: [ Authentication ]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                refresh_token:
                                    type: string
                            required:
                                - refresh_token
            responses:
                '200':
                    description: Re login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                    refresh_token:
                                        type: string
                                    token_expiration:
                                        type: integer
                                    user_roles:
                                        type: array
                                        items:
                                            type: string
                '400':
                    description: Bad Request - Invalid input format
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '401':
                    description: Unauthorized - JWT Refresh Token Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /register:
        post:
            summary: Register new user
            tags: [Authentication]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstname:
                                    type: string
                                lastname:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                            required:
                                - firstname
                                - lastname
                                - email
                                - password
            responses:
                '201':
                    description: User registered successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                '400':
                    description: Bad Request - Invalid input format
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '409':
                    description: Conflict - Email already exists
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'